{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\asafs\\\\Desktop\\\\moveoNote\\\\moveoNote\\\\screens\\\\LoginScreen.js\";\n\nimport React, { createContext, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var loginBtn = function loginBtn(email, password) {\n    fire.auth().signInWithEmailAndPassword(email, password).then(function () {\n      fire.auth().onAuthStateChanged(function (authUser) {\n        if (authUser !== null) {\n          console.log(authUser);\n        }\n      });\n    }).catch(function (err) {\n      switch (err.code) {\n        case \"auth/invalid-email\":\n        case \"auth/user-disabled\":\n        case \"auth/user-not-found\":\n          alert(\"wrong Email\");\n          console.log(err.message);\n          break;\n\n        case \"auth/wrong-password\":\n          alert(\"wrong Password\");\n          console.log(err.message);\n          break;\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"../assets/moveoappLogo.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: styles.inputView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputText,\n    placeholder: \"Email...\",\n    placeholderTextColor: \"#003f5c\",\n    onChangeText: function onChangeText(text) {\n      return _this.setEmail({\n        text: text\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 23\n    }\n  })), React.createElement(View, {\n    style: styles.inputView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    secureTextEntry: true,\n    style: styles.inputText,\n    placeholder: \"Password...\",\n    placeholderTextColor: \"#003f5c\",\n    onChangeText: function onChangeText(text) {\n      return _this.setPassword({\n        text: text\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }\n  })), React.createElement(TouchableOpacity, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.forgot,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 23\n    }\n  }, \"Forgot Password?\")), React.createElement(TouchableOpacity, {\n    onPress: loginBtn,\n    style: styles.loginBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 23\n    }\n  }, \"LOGIN\")), React.createElement(TouchableOpacity, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 23\n    }\n  }, \"Signup\")));\n};\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'rgb(241, 241, 241)',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  logo: {\n    width: \"50%\",\n    height: \"20%\",\n    marginBottom: 40\n  },\n  appName: {\n    fontWeight: \"bold\",\n    fontSize: 40,\n    color: \"#fb5b5a\",\n    marginBottom: 40\n  },\n  inputView: {\n    width: \"80%\",\n    backgroundColor: \"white\",\n    borderRadius: 25,\n    height: 50,\n    marginBottom: 20,\n    justifyContent: \"center\",\n    padding: 20\n  },\n  inputText: {\n    height: 70\n  },\n  forgot: {\n    color: \"#808080\",\n    fontSize: 11\n  },\n  loginBtn: {\n    width: \"80%\",\n    backgroundColor: \"rgb(241 ,180, 23)\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    marginBottom: 10\n  },\n  loginText: {\n    color: \"#808080\",\n    fontWeight: \"bold\",\n    fontSize: 15\n  }\n});","map":{"version":3,"sources":["C:/Users/asafs/Desktop/moveoNote/moveoNote/screens/LoginScreen.js"],"names":["React","createContext","useState","NavigationContainer","createStackNavigator","LoginScreen","navigation","email","setEmail","password","setPassword","loginBtn","fire","auth","signInWithEmailAndPassword","then","onAuthStateChanged","authUser","console","log","catch","err","code","alert","message","styles","container","logo","require","inputView","inputText","text","forgot","loginText","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","height","marginBottom","appName","fontWeight","fontSize","color","borderRadius","padding","marginTop"],"mappings":"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","sourcesContent":["import React, { createContext, useState } from 'react'\r\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity,Image,SafeAreaView } from 'react-native';\r\nimport { NavigationContainer, } from '@react-navigation/native'\r\nimport { createStackNavigator } from '@react-navigation/stack'\r\n\r\nconst LoginScreen = ({navigation}) => {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\nconst loginBtn = (email, password) => {\r\n         fire.auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(() => {\r\n                 fire.auth().onAuthStateChanged(authUser => {\r\n                    if (authUser !== null) {\r\n                        console.log(authUser)\r\n                    }\r\n                })\r\n            })\r\n            .catch(err => {\r\n                switch (err.code) {\r\n                    case \"auth/invalid-email\":\r\n                    case \"auth/user-disabled\":\r\n                    case \"auth/user-not-found\":\r\n                        alert(\"wrong Email\");\r\n                        console.log(err.message)\r\n                        break;\r\n                    case \"auth/wrong-password\":\r\n                        alert(\"wrong Password\");\r\n                        console.log(err.message)\r\n                        break;\r\n                }\r\n               \r\n            });\r\n    }\r\n  \r\n\r\n    return (\r\n        <View style={styles.container}>\r\n                    <Image\r\n                    style={styles.logo}\r\n                    source={require('../assets/moveoappLogo.png')}\r\n                  />\r\n                    <View style={styles.inputView} >\r\n                      <TextInput  \r\n                        style={styles.inputText}\r\n                        placeholder=\"Email...\" \r\n                        placeholderTextColor=\"#003f5c\"\r\n                        onChangeText={text => this.setEmail({text})}/>\r\n                    </View>\r\n                    <View style={styles.inputView} >\r\n                      <TextInput  \r\n                        secureTextEntry\r\n                        style={styles.inputText}\r\n                        placeholder=\"Password...\" \r\n                        placeholderTextColor=\"#003f5c\"\r\n                        onChangeText={text => this.setPassword({text})}/>\r\n                    </View>\r\n                    \r\n                    <TouchableOpacity>\r\n                      <Text style={styles.forgot}>Forgot Password?</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={loginBtn} style={styles.loginBtn}>\r\n                      <Text style={styles.loginText}>LOGIN</Text>\r\n                      \r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity>\r\n                      <Text style={styles.loginText}>Signup</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n    \r\n      )\r\n      \r\n}\r\nexport default LoginScreen\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: 'rgb(241, 241, 241)',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n     \r\n    },\r\n    logo:{\r\n      width:\"50%\",\r\n     height:\"20%\",\r\n     marginBottom:40\r\n    },\r\n    \r\n    appName:{\r\n      fontWeight:\"bold\",\r\n      fontSize:40,\r\n      color:\"#fb5b5a\",\r\n      marginBottom:40\r\n    },\r\n    inputView:{\r\n      width:\"80%\",\r\n      backgroundColor:\"white\",\r\n      borderRadius:25,\r\n      height:50,\r\n      marginBottom:20,\r\n      justifyContent:\"center\",\r\n      padding:20,\r\n    },\r\n    inputText:{\r\n      height:70,\r\n      \r\n    },\r\n    forgot:{\r\n      color:\"#808080\",\r\n      fontSize:11\r\n    },\r\n    loginBtn:{\r\n      width:\"80%\",\r\n      backgroundColor:\"rgb(241 ,180, 23)\",\r\n      borderRadius:25,\r\n      height:50,\r\n      alignItems:\"center\",\r\n      justifyContent:\"center\",\r\n      marginTop:40,\r\n      marginBottom:10\r\n      \r\n    },\r\n    loginText:{\r\n      color:\"#808080\",\r\n      fontWeight:\"bold\",\r\n      fontSize:15,\r\n    }\r\n  });\r\n  "]},"metadata":{},"sourceType":"module"}