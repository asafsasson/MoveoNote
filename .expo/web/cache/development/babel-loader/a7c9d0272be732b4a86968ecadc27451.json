{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\asafs\\\\Desktop\\\\moveoNote\\\\MoveoNote\\\\screens\\\\HomeScreen.js\";\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { FontAwesome5, MaterialCommunityIcons, FontAwesome, MaterialIcons } from '@expo/vector-icons';\nimport { fire, dbFirestore } from \"../fire\";\nimport MapView, { Marker } from 'react-native-maps';\nimport { Avatar, Button, Card, Title } from 'react-native-paper';\nvar Tab = createBottomTabNavigator();\n\nvar HomeScreen = function HomeScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var Tab = createBottomTabNavigator();\n  var currentUser = route.params.currentUser;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      notes = _useState2[0],\n      setNotes = _useState2[1];\n\n  useEffect(function () {\n    getNotes();\n  }, []);\n\n  function getNotes() {\n    var userNotes = null;\n    dbFirestore.collection(currentUser.uid).onSnapshot(function (docs) {\n      if (docs.size == 0) {\n        setNotes(userNotes);\n      } else {\n        userNotes = [];\n        docs.forEach(function (doc) {\n          var N = {\n            id: doc.id,\n            title: doc.data().title,\n            body: doc.data().body,\n            date: doc.data().date\n          };\n          userNotes.push(N);\n          setNotes(null);\n\n          if (docs.size == userNotes.length) {\n            setNotes(userNotes);\n            console.log(userNotes);\n          }\n        });\n      }\n    });\n    setNotes(userNotes);\n  }\n\n  function deleteNote(currentDoc) {\n    dbFirestore.collection(currentUser.uid).doc(currentDoc.id).delete().catch(function (error) {\n      console.error(\"Error removing document: \", error);\n    });\n    getNotes();\n  }\n\n  function List() {\n    var _this2 = this;\n\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, React.createElement(ScrollView, {\n      style: {\n        marginTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, notes != null ? notes.map(function (item, i) {\n      return React.createElement(Card, {\n        style: styles.shadow,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: styles.user,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }\n      }, React.createElement(Card.Content, {\n        style: {\n          flex: 1,\n          flexDirection: \"column\"\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 37\n        }\n      }, item.title), React.createElement(Text, {\n        style: styles.body,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 37\n        }\n      }, item.body), React.createElement(FontAwesome, {\n        onPress: function onPress() {\n          newNote(item);\n        },\n        style: styles.edit,\n        name: \"edit\",\n        size: 32,\n        color: \"rgb(50, 191, 104)\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 37\n        }\n      }), React.createElement(MaterialIcons, {\n        onPress: function onPress() {\n          deleteNote(item);\n        },\n        style: styles.delete,\n        name: \"delete-outline\",\n        size: 36,\n        color: \"rgb(191, 50, 76)\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 37\n        }\n      }))));\n    }) : React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, \"No note\")), React.createElement(TouchableOpacity, {\n      onPress: newNote,\n      style: styles.TouchableOpacityStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, React.createElement(MaterialCommunityIcons, {\n      style: styles.newNote,\n      name: \"plus-circle-outline\",\n      size: 70,\n      color: \"rgb(241 ,180, 23)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    })));\n  }\n\n  function newNote(currentNote) {\n    if (currentNote.id) {\n      navigation.navigate('NoteScreen', {\n        currentUser: currentUser,\n        noteId: currentNote\n      });\n    } else {\n      navigation.navigate('NoteScreen', {\n        currentUser: currentUser,\n        noteId: null\n      });\n    }\n  }\n\n  function Map() {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, React.createElement(MapView, {\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 16\n      }\n    }));\n  }\n\n  function Profile() {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, \"Profile\"));\n  }\n\n  return React.createElement(Tab.Navigator, {\n    initialRouteName: \"List\",\n    activeColor: \"#fff\",\n    barStyle: {\n      backgroundColor: 'rgb(243,119,0)'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Hello \" + currentUser.email,\n    component: List,\n    options: {\n      tabBarLabel: 'List',\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color;\n        return React.createElement(FontAwesome5, {\n          name: \"list\",\n          size: 24,\n          color: \"black\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Map Mode\",\n    component: Map,\n    options: {\n      tabBarLabel: 'Map',\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var color = _ref3.color;\n        return React.createElement(FontAwesome5, {\n          name: \"map\",\n          size: 24,\n          color: \"black\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Profile\",\n    component: Profile,\n    options: {\n      tabBarLabel: 'Profile',\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var color = _ref4.color;\n        return React.createElement(FontAwesome5, {\n          name: \"user\",\n          size: 24,\n          color: \"black\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default HomeScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'rgb(241, 241, 241)',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  TouchableOpacityStyle: {\n    position: 'absolute',\n    alignItems: 'center',\n    justifyContent: 'center',\n    right: 20,\n    bottom: 10\n  },\n  newNote: {\n    resizeMode: 'contain',\n    width: 70,\n    height: 70\n  },\n  shadow: {\n    overflow: 'hidden',\n    marginBottom: 8,\n    height: 130,\n    width: 350,\n    borderRadius: 15\n  },\n  user: {\n    flexDirection: 'row',\n    marginTop: 8,\n    marginLeft: 8\n  },\n  title: {\n    fontWeight: \"bold\",\n    fontSize: 25,\n    color: \"rgb(241 ,180, 23)\",\n    marginBottom: 5\n  },\n  body: {\n    fontSize: 15,\n    color: \"black\"\n  },\n  edit: {\n    position: 'relative',\n    left: \"90%\",\n    top: \"18%\"\n  },\n  delete: {\n    position: 'relative',\n    left: \"70%\",\n    bottom: \"10%\",\n    width: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/asafs/Desktop/moveoNote/MoveoNote/screens/HomeScreen.js"],"names":["React","createContext","useState","useEffect","NavigationContainer","createBottomTabNavigator","FontAwesome5","MaterialCommunityIcons","FontAwesome","MaterialIcons","fire","dbFirestore","MapView","Marker","Avatar","Button","Card","Title","Tab","HomeScreen","route","navigation","currentUser","params","notes","setNotes","getNotes","userNotes","collection","uid","onSnapshot","docs","size","forEach","doc","N","id","title","data","body","date","push","length","console","log","deleteNote","currentDoc","delete","catch","error","List","flex","justifyContent","alignItems","marginTop","map","item","i","styles","shadow","user","flexDirection","newNote","edit","TouchableOpacityStyle","currentNote","navigate","noteId","Map","width","height","Profile","backgroundColor","email","tabBarLabel","tabBarIcon","color","StyleSheet","create","container","position","right","bottom","resizeMode","overflow","marginBottom","borderRadius","marginLeft","fontWeight","fontSize","left","top"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useEffect, } from 'react'\r\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity, Image, ScrollView } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { FontAwesome5, MaterialCommunityIcons, FontAwesome, MaterialIcons } from '@expo/vector-icons';\r\nimport { fire, dbFirestore } from '../fire';\r\n\r\nimport MapView, { Marker } from 'react-native-maps'\r\n\r\nimport { Avatar, Button, Card, Title } from 'react-native-paper';\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\n\r\nconst HomeScreen = ({ route, navigation }) => {\r\n    const Tab = createBottomTabNavigator();\r\n    const { currentUser } = route.params;\r\n    const [notes, setNotes] = useState(null)\r\n\r\n\r\n    useEffect(() => {\r\n        getNotes()\r\n    }, [])\r\n\r\n    function getNotes() {\r\n        let userNotes = null;\r\n        dbFirestore.collection(currentUser.uid)\r\n            .onSnapshot(docs => {\r\n                if (docs.size == 0) {\r\n                    setNotes(userNotes)\r\n                }\r\n                else {\r\n                     userNotes = [];\r\n                    docs.forEach(doc => {\r\n                        let N = {\r\n                            id: doc.id,\r\n                            title: doc.data().title,\r\n                            body: doc.data().body,\r\n                            date: doc.data().date\r\n                        }\r\n                        userNotes.push(N)\r\n                        setNotes(null)\r\n                        if (docs.size == userNotes.length) {\r\n                            setNotes(userNotes)\r\n                            console.log(userNotes)\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            setNotes(userNotes)\r\n\r\n    }\r\n\r\n    function deleteNote(currentDoc) {\r\n        dbFirestore.collection(currentUser.uid).doc(currentDoc.id).delete()\r\n            .catch((error) => {\r\n                console.error(\"Error removing document: \", error);\r\n            });\r\n        getNotes();\r\n    }\r\n\r\n\r\n    function List() {\r\n        return (\r\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <ScrollView style={{ marginTop: 10 }}>\r\n                    {notes != null ? notes.map((item, i) =>\r\n                        <Card style={styles.shadow}>\r\n                            <View style={styles.user}>\r\n                                <Card.Content style={{ flex: 1, flexDirection: \"column\" }}>\r\n                                    <Text style={styles.title}>{item.title}</Text>\r\n                                    <Text style={styles.body}>{item.body}</Text>\r\n                                    <FontAwesome onPress={() => { newNote(item) }} style={styles.edit} name=\"edit\" size={32} color=\"rgb(50, 191, 104)\" />\r\n                                    <MaterialIcons onPress={() => { deleteNote(item) }} style={styles.delete} name=\"delete-outline\" size={36} color=\"rgb(191, 50, 76)\" />\r\n                                </Card.Content>\r\n                            </View>\r\n                        </Card>\r\n\r\n                    ) : <Text>No note</Text>}\r\n                </ScrollView>\r\n\r\n                <TouchableOpacity onPress={newNote} style={styles.TouchableOpacityStyle} >\r\n                    <MaterialCommunityIcons style={styles.newNote} name=\"plus-circle-outline\" size={70} color=\"rgb(241 ,180, 23)\" />\r\n                </TouchableOpacity>\r\n            </View>\r\n\r\n        );\r\n    }\r\n\r\n    function newNote(currentNote) {\r\n        if (currentNote.id) {\r\n            navigation.navigate('NoteScreen', {\r\n                currentUser: currentUser,\r\n                noteId: currentNote,\r\n            });\r\n        }\r\n        else {\r\n            navigation.navigate('NoteScreen', {\r\n                currentUser: currentUser,\r\n                noteId: null,\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    function Map() {\r\n        return (\r\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n               <MapView style={{width:\"100%\", height:\"100%\"}}> \r\n      </MapView>\r\n            </View>\r\n        );\r\n    }\r\n    function Profile() {\r\n        return (\r\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Text>Profile</Text>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Tab.Navigator\r\n            initialRouteName=\"List\"\r\n            activeColor=\"#fff\"\r\n            barStyle={{ backgroundColor: 'rgb(243,119,0)' }}\r\n        >\r\n            <Tab.Screen name={\"Hello \" + currentUser.email} component={List}\r\n                options={{\r\n                    tabBarLabel: 'List',\r\n                    tabBarIcon: ({ color }) => (\r\n                        <FontAwesome5 name=\"list\" size={24} color=\"black\" />\r\n                    ),\r\n\r\n                }}\r\n            />\r\n            <Tab.Screen name=\"Map Mode\" component={Map}\r\n                options={{\r\n                    tabBarLabel: 'Map',\r\n                    tabBarIcon: ({ color }) => (\r\n                        <FontAwesome5 name=\"map\" size={24} color=\"black\" />\r\n                    ),\r\n                }}\r\n\r\n            />\r\n            <Tab.Screen name=\"Profile\" component={Profile}\r\n                options={{\r\n                    tabBarLabel: 'Profile',\r\n                    tabBarIcon: ({ color }) => (\r\n                        <FontAwesome5 name=\"user\" size={24} color=\"black\" />\r\n                    ),\r\n                }}\r\n\r\n            />\r\n        </Tab.Navigator>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default HomeScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: 'rgb(241, 241, 241)',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n\r\n    },\r\n\r\n    TouchableOpacityStyle: {\r\n        position: 'absolute',\r\n\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        right: 20,\r\n        bottom: 10,\r\n    },\r\n\r\n    newNote: {\r\n        resizeMode: 'contain',\r\n        width: 70,\r\n        height: 70,\r\n    },\r\n    shadow: {\r\n        overflow: 'hidden',\r\n        marginBottom: 8,\r\n        height: 130,\r\n        width: 350,\r\n        borderRadius: 15\r\n    },\r\n    user: {\r\n        flexDirection: 'row',\r\n        marginTop: 8,\r\n        marginLeft: 8,\r\n    },\r\n    title: {\r\n        fontWeight: \"bold\",\r\n        fontSize: 25,\r\n        color: \"rgb(241 ,180, 23)\",\r\n        marginBottom: 5\r\n\r\n    },\r\n    body: {\r\n        fontSize: 15,\r\n        color: \"black\",\r\n\r\n    },\r\n    edit: {\r\n        position: 'relative',\r\n        left: \"90%\",\r\n        top: \"18%\"\r\n    },\r\n    delete: {\r\n        position: 'relative',\r\n        left: \"70%\",\r\n        bottom: \"10%\",\r\n        width: 30\r\n    }\r\n\r\n\r\n});\r\n"]},"metadata":{},"sourceType":"module"}