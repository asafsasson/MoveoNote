{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\asafs\\\\Desktop\\\\moveoNote\\\\MoveoNote\\\\screens\\\\LoginScreen.js\";\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport fire from \"../fire\";\nimport { AsyncStorage } from '@react-native-community/async-storage';\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState({\n    value: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var user = null;\n\n  var loginBtn = function loginBtn() {\n    console.log(email.value);\n    console.log(password.value);\n    fire.auth().signInWithEmailAndPassword(email.value, password.value).then(function () {\n      fire.auth().onAuthStateChanged(function (authUser) {\n        if (authUser !== null) {\n          user = authUser;\n          console.log(authUser);\n          Alert.alert('Welcome', 'Hello ' + authUser.email, [{\n            text: 'Ok'\n          }], {\n            cancelable: false\n          });\n          navigation.navigate('HomeScreen', {\n            currentUser: authUser\n          });\n        }\n      });\n    }).catch(function (err) {\n      switch (err.code) {\n        case \"auth/invalid-email\":\n        case \"auth/user-disabled\":\n        case \"auth/user-not-found\":\n          alert(\"wrong Email\");\n          console.log(err.message);\n          break;\n\n        case \"auth/wrong-password\":\n          alert(\"wrong Password\");\n          console.log(err.message);\n          break;\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"../assets/moveoappLogo.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.headLine,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Welcome to MoveoNote\"), React.createElement(View, {\n    style: styles.inputView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputText,\n    placeholder: \"Email...\",\n    placeholderTextColor: \"#003f5c\",\n    onChangeText: function onChangeText(text) {\n      return setEmail({\n        value: text\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.inputView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    secureTextEntry: true,\n    style: styles.inputText,\n    placeholder: \"Password...\",\n    placeholderTextColor: \"#003f5c\",\n    onChangeText: function onChangeText(text) {\n      return setPassword({\n        value: text\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: loginBtn,\n    style: styles.loginBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, \"LOGIN\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('RegisterScreen');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, \"Signup\")));\n};\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'rgb(241, 241, 241)',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  headLine: {\n    fontWeight: \"bold\",\n    fontSize: 25,\n    position: 'absolute',\n    top: 65,\n    color: \"#808085\"\n  },\n  logo: {\n    width: \"50%\",\n    height: \"20%\",\n    marginBottom: 40\n  },\n  appName: {\n    fontWeight: \"bold\",\n    fontSize: 40,\n    color: \"#fb5b5a\",\n    marginBottom: 40\n  },\n  inputView: {\n    width: \"80%\",\n    backgroundColor: \"white\",\n    borderRadius: 25,\n    height: 50,\n    marginBottom: 20,\n    justifyContent: \"center\",\n    padding: 20\n  },\n  inputText: {\n    height: 70\n  },\n  loginBtn: {\n    width: \"80%\",\n    backgroundColor: \"rgb(241 ,180, 23)\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    marginBottom: 10\n  },\n  loginText: {\n    color: \"#808080\",\n    fontWeight: \"bold\",\n    fontSize: 15\n  }\n});","map":{"version":3,"sources":["C:/Users/asafs/Desktop/moveoNote/MoveoNote/screens/LoginScreen.js"],"names":["React","useState","fire","AsyncStorage","LoginScreen","navigation","value","email","setEmail","password","setPassword","user","loginBtn","console","log","auth","signInWithEmailAndPassword","then","onAuthStateChanged","authUser","Alert","alert","text","cancelable","navigate","currentUser","catch","err","code","message","styles","container","logo","require","headLine","inputView","inputText","loginText","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","fontWeight","fontSize","position","top","color","width","height","marginBottom","appName","borderRadius","padding","marginTop"],"mappings":"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","sourcesContent":["import React, {useState } from 'react'\r\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity, Image ,Alert } from 'react-native';\r\nimport fire from '../fire'\r\nimport {AsyncStorage } from '@react-native-community/async-storage';\r\n\r\n\r\nconst LoginScreen = ({ navigation }) => {\r\n    \r\n    const [email, setEmail] = useState({ value: ''})\r\n    const [password, setPassword] = useState({ value: ''})\r\n    var user=null;\r\n\r\n  /*   useEffect(() => {\r\n        autoLogin();\r\n      }, [autoLogin])\r\n\r\n      function autoLogin(){\r\n        if (user!=null) {\r\n            alert(user.email)\r\n        }\r\n        else{\r\n            alert(\"else\")\r\n        }\r\n      }\r\n       */\r\n\r\n    const loginBtn = () => {\r\n        console.log(email.value)\r\n        console.log(password.value)\r\n        fire.auth()\r\n            .signInWithEmailAndPassword(email.value, password.value)\r\n            .then(() => {\r\n                fire.auth().onAuthStateChanged(authUser => {\r\n                    if (authUser !== null) {\r\n                        user=authUser;\r\n                        console.log(authUser)\r\n                        Alert.alert(\r\n                            'Welcome',\r\n                            'Hello '+authUser.email,\r\n                            [\r\n                              {text: 'Ok'},\r\n                            \r\n                            ],\r\n                            {cancelable: false},\r\n                          );\r\n                        navigation.navigate('HomeScreen', {\r\n                            currentUser: authUser,\r\n                          });\r\n\r\n                         \r\n                    }\r\n                })\r\n            })\r\n            .catch(err => {\r\n                switch (err.code) {\r\n                    case \"auth/invalid-email\":\r\n                    case \"auth/user-disabled\":\r\n                    case \"auth/user-not-found\":\r\n                        alert(\"wrong Email\");\r\n                        console.log(err.message)\r\n                        break;\r\n                    case \"auth/wrong-password\":\r\n                        alert(\"wrong Password\");\r\n                        console.log(err.message)\r\n                        break;\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n        \r\n            <Image\r\n                style={styles.logo}\r\n                source={require('../assets/moveoappLogo.png')}\r\n            />\r\n            <Text style={styles.headLine}>Welcome to MoveoNote</Text>\r\n            <View style={styles.inputView} >\r\n                <TextInput\r\n                    style={styles.inputText}\r\n                    placeholder=\"Email...\"\r\n                    placeholderTextColor=\"#003f5c\"\r\n                    onChangeText={(text) => setEmail({ value: text })} />\r\n            </View>\r\n            <View style={styles.inputView} >\r\n                <TextInput\r\n                    secureTextEntry\r\n                    style={styles.inputText}\r\n                    placeholder=\"Password...\"\r\n                    placeholderTextColor=\"#003f5c\"\r\n                    onChangeText={(text) => setPassword({ value: text })} />\r\n            </View>\r\n            <TouchableOpacity onPress={loginBtn} style={styles.loginBtn}>\r\n                <Text style={styles.loginText}>LOGIN</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={() => navigation.navigate('RegisterScreen')}>\r\n                <Text style={styles.loginText}>Signup</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default LoginScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: 'rgb(241, 241, 241)',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n\r\n    },\r\n    headLine:{\r\n        fontWeight: \"bold\",\r\n        fontSize: 25,\r\n        position:'absolute',\r\n        top:65,\r\n        color: \"#808085\",\r\n    },\r\n    logo: {\r\n        width: \"50%\",\r\n        height: \"20%\",\r\n        marginBottom: 40\r\n    },\r\n\r\n    appName: {\r\n        fontWeight: \"bold\",\r\n        fontSize: 40,\r\n        color: \"#fb5b5a\",\r\n        marginBottom: 40\r\n    },\r\n    inputView: {\r\n        width: \"80%\",\r\n        backgroundColor: \"white\",\r\n        borderRadius: 25,\r\n        height: 50,\r\n        marginBottom: 20,\r\n        justifyContent: \"center\",\r\n        padding: 20,\r\n    },\r\n    inputText: {\r\n        height: 70,\r\n\r\n    },\r\n    loginBtn: {\r\n        width: \"80%\",\r\n        backgroundColor: \"rgb(241 ,180, 23)\",\r\n        borderRadius: 25,\r\n        height: 50,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginTop: 40,\r\n        marginBottom: 10\r\n\r\n    },\r\n    loginText: {\r\n        color: \"#808080\",\r\n        fontWeight: \"bold\",\r\n        fontSize: 15,\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}