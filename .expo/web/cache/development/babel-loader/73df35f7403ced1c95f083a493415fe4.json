{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\asafs\\\\Desktop\\\\moveoNote\\\\MoveoNote\\\\screens\\\\NoteScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { dbFirestore } from \"../fire\";\nimport * as Location from 'expo-location';\nimport DatePicker from 'react-native-datepicker';\n\nvar NoteScreen = function NoteScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var _route$params = route.params,\n      currentUser = _route$params.currentUser,\n      noteId = _route$params.noteId;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      title = _useState4[0],\n      setTitle = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      body = _useState6[0],\n      setBody = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      lon = _useState8[0],\n      setLon = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      lat = _useState10[0],\n      setLat = _useState10[1];\n\n  var location = [];\n  useEffect(function () {\n    function loc() {\n      return _regeneratorRuntime.async(function loc$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getLocation());\n\n            case 2:\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(setLat(location.coords.latitude));\n\n            case 4:\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(setLon(location.coords.longitude));\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    loc();\n  }, []);\n\n  var saveNote = function saveNote() {\n    return _regeneratorRuntime.async(function saveNote$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (noteId != null) {\n              dbFirestore.collection(currentUser.uid).doc(noteId.id).set({\n                title: title != null ? title : noteId.title,\n                body: body != null ? body : noteId.body,\n                date: date != null ? date : noteId.date,\n                lat: lat,\n                lon: lon\n              });\n              navigation.navigate('HomeScreen', {\n                currentUser: currentUser\n              });\n              Alert.alert('‚úÖ', 'Note successfully Edited', [{\n                text: 'Ok'\n              }], {\n                cancelable: false\n              });\n            } else {\n              if (title && body && date != null) {\n                dbFirestore.collection(currentUser.uid).add({\n                  title: title,\n                  body: body,\n                  date: date,\n                  lat: lat,\n                  lon: lon\n                }).catch(function (err) {\n                  alert(\"Something went wrong - please try again\");\n                });\n                navigation.navigate('HomeScreen', {\n                  currentUser: currentUser\n                });\n                Alert.alert('‚úÖ', 'Note successfully added', [{\n                  text: 'Ok'\n                }], {\n                  cancelable: false\n                });\n              } else {\n                Alert.alert('‚ùå', 'One of the entries is missing', [{\n                  text: 'Ok'\n                }], {\n                  cancelable: false\n                });\n              }\n            }\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getLocation = function getLocation() {\n    var _await$Location$reque, status;\n\n    return _regeneratorRuntime.async(function getLocation$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(Location.requestBackgroundPermissionsAsync());\n\n          case 2:\n            _await$Location$reque = _context3.sent;\n            status = _await$Location$reque.status;\n\n            if (!(status !== 'granted')) {\n              _context3.next = 8;\n              break;\n            }\n\n            Alert.alert('üõ∞', 'You must enable location sharing to signup', [{\n              text: 'Ok'\n            }], {\n              cancelable: false\n            });\n            navigation.goBack();\n            return _context3.abrupt(\"return\");\n\n          case 8:\n            _context3.next = 10;\n            return _regeneratorRuntime.awrap(Location.getLastKnownPositionAsync({\n              accuracy: 6\n            }));\n\n          case 10:\n            location = _context3.sent;\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var deleteNote = function deleteNote() {\n    return _regeneratorRuntime.async(function deleteNote$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            noteId != null ? dbFirestore.collection(currentUser.uid).doc(noteId.id).delete().catch(function (error) {\n              console.error(\"Error removing document: \", error);\n            }) : null;\n            navigation.goBack();\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, noteId != null ? React.createElement(Text, {\n    style: styles.headLine,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, \"Edit Note\") : React.createElement(Text, {\n    style: styles.headLine,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, \"New Note\"), React.createElement(View, {\n    style: styles.inputViewTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputText,\n    placeholder: noteId != null ? noteId.title : \"Title...\",\n    placeholderTextColor: \"#003f5c\",\n    onChangeText: function onChangeText(text) {\n      return setTitle(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  })), React.createElement(DatePicker, {\n    style: styles.date,\n    date: date,\n    mode: \"date\",\n    placeholder: noteId != null ? noteId.date : \"select date\",\n    format: \"YYYY-MM-DD\",\n    minDate: \"2015-05-01\",\n    maxDate: \"2025-06-01\",\n    confirmBtnText: \"Confirm\",\n    cancelBtnText: \"Cancel\",\n    onDateChange: function onDateChange(date) {\n      return setDate(date);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.inputViewBody,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputTextBody,\n    placeholder: noteId != null ? noteId.body : \"Body...\",\n    placeholderTextColor: \"#003f5c\",\n    onChangeText: function onChangeText(text) {\n      return setBody(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: saveNote,\n    style: styles.saveBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, noteId != null ? React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 35\n    }\n  }, \"Update\") : React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 58\n    }\n  }, \"Save\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return deleteNote();\n    },\n    style: styles.deleteText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, noteId != null ? React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 31\n    }\n  }, \"Delete\") : React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 54\n    }\n  }, \"Go Back\")));\n};\n\nexport default NoteScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'rgb(241, 241, 241)',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  headLine: {\n    fontWeight: \"bold\",\n    fontSize: 25,\n    position: 'absolute',\n    top: 65,\n    color: \"#808085\"\n  },\n  inputViewTitle: {\n    width: \"80%\",\n    height: 70,\n    backgroundColor: \"white\",\n    borderRadius: 25,\n    marginBottom: 20,\n    paddingLeft: 10,\n    position: 'absolute',\n    top: 150\n  },\n  inputViewBody: {\n    width: \"80%\",\n    height: 150,\n    backgroundColor: \"white\",\n    borderRadius: 25,\n    paddingLeft: 10,\n    position: 'absolute',\n    top: 250\n  },\n  date: {\n    width: \"80%\",\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    position: 'absolute',\n    top: 430\n  },\n  inputText: {\n    height: 70\n  },\n  inputTextBody: {\n    height: 150\n  },\n  newNote: {\n    position: 'absolute',\n    bottom: 20,\n    right: 20\n  },\n  saveBtn: {\n    width: \"80%\",\n    backgroundColor: \"rgb(241 ,180, 23)\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: 'absolute',\n    top: 600\n  },\n  deleteText: {\n    width: \"30%\",\n    backgroundColor: \"rgb(240 ,91, 100)\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: 'absolute',\n    top: 680\n  }\n});","map":{"version":3,"sources":["C:/Users/asafs/Desktop/moveoNote/MoveoNote/screens/NoteScreen.js"],"names":["React","useEffect","useState","dbFirestore","Location","DatePicker","NoteScreen","route","navigation","params","currentUser","noteId","date","setDate","title","setTitle","body","setBody","lon","setLon","lat","setLat","location","loc","getLocation","coords","latitude","longitude","saveNote","collection","uid","doc","id","set","navigate","Alert","alert","text","cancelable","add","catch","err","requestBackgroundPermissionsAsync","status","goBack","getLastKnownPositionAsync","accuracy","deleteNote","delete","error","console","styles","container","headLine","inputViewTitle","inputText","inputViewBody","inputTextBody","saveBtn","deleteText","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","fontWeight","fontSize","position","top","color","width","height","borderRadius","marginBottom","paddingLeft","newNote","bottom","right"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity, Alert } from 'react-native';\r\nimport { dbFirestore } from '../fire'\r\nimport * as Location from 'expo-location';\r\nimport DatePicker from 'react-native-datepicker'\r\n\r\n\r\nconst NoteScreen = ({ route, navigation }) => {\r\n    const { currentUser, noteId } = route.params;\r\n\r\n    const [date, setDate] = useState(null)\r\n    const [title, setTitle] = useState(null)\r\n    const [body, setBody] = useState(null)\r\n    const [lon, setLon] = useState(null)\r\n    const [lat, setLat] = useState(null)\r\n    var location = [];\r\n\r\n    useEffect(() => {\r\n        async function loc() {\r\n            await getLocation()\r\n            await setLat(location.coords.latitude)\r\n            await setLon(location.coords.longitude)\r\n\r\n        }\r\n        loc()\r\n    }, [])\r\n\r\n    const saveNote = async () => {\r\n\r\n        if (noteId != null) {\r\n            dbFirestore.collection(currentUser.uid).doc(noteId.id).set({\r\n                title: title != null ? title : noteId.title,\r\n                body: body != null ? body : noteId.body,\r\n                date: date != null ? date : noteId.date,\r\n                lat: lat,\r\n                lon: lon\r\n            })\r\n            navigation.navigate('HomeScreen', {\r\n                currentUser: currentUser,\r\n            });\r\n            Alert.alert(\r\n                '‚úÖ',\r\n                'Note successfully Edited',\r\n                [\r\n                    { text: 'Ok' },\r\n                ],\r\n                { cancelable: false },\r\n            );\r\n        }\r\n        else {\r\n            if (title && body && date != null) {\r\n                dbFirestore.collection(currentUser.uid)\r\n                    .add({\r\n                        title: title,\r\n                        body: body,\r\n                        date: date,\r\n                        lat: lat,\r\n                        lon: lon\r\n                    })\r\n                    .catch((err) => {\r\n                        alert(\"Something went wrong - please try again\")\r\n                    })\r\n                navigation.navigate('HomeScreen', {\r\n                    currentUser: currentUser,\r\n                });\r\n                Alert.alert(\r\n                    '‚úÖ',\r\n                    'Note successfully added',\r\n                    [\r\n                        { text: 'Ok' },\r\n                    ],\r\n                    { cancelable: false },\r\n                );\r\n            }\r\n            else {\r\n                Alert.alert(\r\n                    '‚ùå',\r\n                    'One of the entries is missing',\r\n                    [\r\n                        { text: 'Ok' },\r\n                    ],\r\n                    { cancelable: false },\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    const getLocation = async () => {\r\n        let { status } = await Location.requestBackgroundPermissionsAsync();\r\n        if (status !== 'granted') {\r\n            Alert.alert(\r\n                'üõ∞',\r\n                'You must enable location sharing to signup',\r\n                [\r\n                    { text: 'Ok' },\r\n                ],\r\n                { cancelable: false },\r\n            );\r\n            navigation.goBack()\r\n            return;\r\n        }\r\n        location = await Location.getLastKnownPositionAsync({\r\n            accuracy: 6,\r\n        });\r\n    }\r\n\r\n    const deleteNote = async () => {\r\n        noteId != null ?\r\n            dbFirestore.collection(currentUser.uid).doc(noteId.id).delete()\r\n                .catch((error) => {\r\n                    console.error(\"Error removing document: \", error);\r\n                })\r\n\r\n            : null\r\n        navigation.goBack()\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            {noteId != null ?\r\n                <Text style={styles.headLine}>Edit Note</Text> :\r\n                <Text style={styles.headLine}>New Note</Text>}\r\n            <View style={styles.inputViewTitle} >\r\n                <TextInput\r\n                    style={styles.inputText}\r\n                    placeholder=\r\n                    {noteId != null ? noteId.title : \"Title...\"}\r\n                    placeholderTextColor=\"#003f5c\"\r\n                    onChangeText={(text) => setTitle(text)} />\r\n            </View>\r\n            <DatePicker\r\n                style={styles.date}\r\n                date={date}\r\n                mode=\"date\"\r\n                placeholder=\r\n                {noteId != null ? noteId.date : \"select date\"}\r\n                format=\"YYYY-MM-DD\"\r\n                minDate=\"2015-05-01\"\r\n                maxDate=\"2025-06-01\"\r\n                confirmBtnText=\"Confirm\"\r\n                cancelBtnText=\"Cancel\"\r\n                /*  customStyles={{\r\n                     dateIcon: {\r\n                         position: 'absolute',\r\n                         left: 0,\r\n                         top: 4,\r\n                         marginLeft: 0\r\n                     },\r\n                     dateInput: {\r\n                         marginLeft: 36\r\n                     }\r\n                     // ... You can check the source to find the other keys.\r\n                 }} */\r\n                onDateChange={(date) => setDate(date)} />\r\n\r\n\r\n            <View style={styles.inputViewBody} >\r\n                <TextInput\r\n                    style={styles.inputTextBody}\r\n                    placeholder=\r\n                    {noteId != null ? noteId.body : \"Body...\"}\r\n                    placeholderTextColor=\"#003f5c\"\r\n                    onChangeText={(text) => setBody(text)} />\r\n            </View>\r\n            <TouchableOpacity onPress={saveNote} style={styles.saveBtn}>\r\n                {noteId != null ? <Text >Update</Text> : <Text >Save</Text>}\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={() => deleteNote()} style={styles.deleteText}>\r\n            {noteId != null ? <Text >Delete</Text> : <Text >Go Back</Text>}\r\n             \r\n            </TouchableOpacity>\r\n        </View>\r\n    )\r\n}\r\nexport default NoteScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: 'rgb(241, 241, 241)',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n\r\n    },\r\n    headLine: {\r\n        fontWeight: \"bold\",\r\n        fontSize: 25,\r\n        position: 'absolute',\r\n        top: 65,\r\n        color: \"#808085\",\r\n    },\r\n    inputViewTitle: {\r\n        width: \"80%\",\r\n        height: 70,\r\n        backgroundColor: \"white\",\r\n        borderRadius: 25,\r\n        marginBottom: 20,\r\n        paddingLeft: 10,\r\n        position: 'absolute',\r\n        top: 150\r\n    },\r\n    inputViewBody: {\r\n        width: \"80%\",\r\n        height: 150,\r\n        backgroundColor: \"white\",\r\n        borderRadius: 25,\r\n        paddingLeft: 10,\r\n        position: 'absolute',\r\n        top: 250\r\n    },\r\n    date: {\r\n        width: \"80%\",\r\n        backgroundColor: \"white\",\r\n        borderRadius: 10,\r\n        position: 'absolute',\r\n        top: 430\r\n    },\r\n    inputText: {\r\n        height: 70,\r\n    },\r\n    inputTextBody: {\r\n        height: 150,\r\n    },\r\n    newNote: {\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n    },\r\n    saveBtn: {\r\n        width: \"80%\",\r\n        backgroundColor: \"rgb(241 ,180, 23)\",\r\n        borderRadius: 25,\r\n        height: 50,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        position: 'absolute',\r\n        top: 600,\r\n    },\r\n    deleteText: {\r\n        width: \"30%\",\r\n        backgroundColor: \"rgb(240 ,91, 100)\",\r\n        borderRadius: 25,\r\n        height: 50,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        position: 'absolute',\r\n        top: 680,\r\n    },\r\n\r\n\r\n\r\n});\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}